
version: '2.1'

services:
  
  # ------------------------------------------------------------------------------------
  # MQTT broker - HiveMQ 4 
  # ------------------------------------------------------------------------------------
  hivemq4:
    build: ./hivemq4
    ports:
      - 1883:1883 # MQTT/TCP protocol port
      - 8080:8080 # Control Center port
      - 8000:8000 # Websockets port
    volumes:
      - hivemq_data:/opt/hivemq/data                     # Make broker data persistent throughout stop/start cycles
      - hivemq_log:/opt/hivemq/log                       # Persist log data
      - hivemq_license:/opt/hivemq/license               # Persist HiveMQ license
    environment:
      JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:InitialRAMPercentage=30 -XX:MaxRAMPercentage=80 -XX:MinRAMPercentage=30"
      HIVEMQ_BRIDGE_EXTENSION: false
      HIVEMQ_HOST_URL: "HIVEMQ_HOST_URL"
      HIVEMQ_HOST_PORT: "HIVEMQ_HOST_PORT"
      HIVEMQ_HOST_USERNAME: "HIVEMQ_HOST_USERNAME"
      HIVEMQ_HOST_PASSWORD: "HIVEMQ_HOST_PASSWORD"
      HIVEMQ_TLS_ENABLED: false
      HIVEMQ_TOPICS_CONFIGURATION: "<filter>#</filter>"
      HIVEMQ_CONNECTION_ENABLED: false
  
  
  # ------------------------------------------------------------------------------------
  # Influxdb
  # ------------------------------------------------------------------------------------
  influx:
    # image: influxdb:1.7.11
    image: influxdb:latest
    # image: influxdb:2.0
    restart: always
    ports:
        - "8086:8086"
    volumes:
        - influxdb-data:/var/lib/influxdb2
        - influxdb-config:/etc/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup 
      DOCKER_INFLUXDB_INIT_ORG: balena 
      DOCKER_INFLUXDB_INIT_BUCKET: balena
      DOCKER_INFLUXDB_INIT_USERNAME: balena
      DOCKER_INFLUXDB_INIT_PASSWORD: balenabalena
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: PB0Pjh4_iou_uNkww4unb-WkGQ-tTe3KoWbUsb4O9rlxOhuj3kgkhD7tH1jXZxzleNob8WzONGbh0tM1SjHQWQ==
      INFLUXDB_DB: hivemq


  # ------------------------------------------------------------------------------------
  # Grafana
  # ------------------------------------------------------------------------------------
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    network_mode: host
    ports:
      - '3000:3000'
    volumes:
        - "grafana-data:/data"
  
  # ------------------------------------------------------------------------------------
  # Node-RED
  # ------------------------------------------------------------------------------------
  node-red:
    image: bh.cr/balenalabs/balena-node-red-amd64
    container_name: node-red
    privileged: true
    restart: unless-stopped
    volumes:
        - 'node-red-data:/data'
    labels:
        io.balena.features.dbus: '1'
        io.balena.features.sysfs: '1'
        io.balena.features.supervisor-api: '1'
        io.balena.features.balena-api: '1'
    ports:
        - 80:80
    environment:
        PORT: 80
        USERNAME: "balena"
        PASSWORD: "balena"
        ENCRIPTION_KEY: "balena"        
    cap_add:
        - SYS_RAWIO
    devices:
        - "/dev/mem:/dev/mem"
        - "/dev/gpiomem:/dev/gpiomem"
        - "/dev/i2c-1:/dev/i2c-1"
  

  # ------------------------------------------------------------------------------------
  # Ignition Edge Server software
  # ------------------------------------------------------------------------------------
  #ignition:
  #  #image: inductiveautomation/ignition:latest
  #  build: ./ignition
  #  ports:
  #    - "9088:8088"
  #    - "8043:8043"
  #    - "8060:8060"
  #  volumes:
  #    - ignition-data:/usr/local/bin/ignition/data
  #  cap_add:
  #    - SYS_RAWIO
  #  environment:
  #    - ACCEPT_IGNITION_EULA=Y
  #    - GATEWAY_ADMIN_USERNAME=balena
  #    - GATEWAY_ADMIN_PASSWORD=balena
  #    - IGNITION_EDITION=edge
  #  command: >
  #    -n Ignition-supp-66195
  #  privileged: true
  
  
volumes:
  hivemq_data:
  hivemq_log:
  hivemq_license:
  #ignition-data:
  grafana-data:
  influxdb-data:
  influxdb-config:
  node-red-data:
